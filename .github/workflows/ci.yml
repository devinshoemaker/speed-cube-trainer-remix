name: CI

on:
  push:
    branches:
      - main
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  actions: write
  contents: read

jobs:
  prettier:
    name: Prettier
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          cache: npm
          cache-dependency-path: ./package.json
          node-version: 20

      - name: Install deps
        run: npm install

      - name: Prettier check
        run: npm run format:check

  lint:
    name: ESLint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          cache: npm
          cache-dependency-path: ./package.json
          node-version: 20

      - name: Install deps
        run: npm install

      - name: Lint
        run: npm run lint

  typecheck:
    name: TypeScript
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          cache: npm
          cache-dependency-path: ./package.json
          node-version: 20

      - name: Install deps
        run: npm install

      - name: Type check
        run: npm run typecheck --if-present

  vitest:
    name: Vitest
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          cache: npm
          cache-dependency-path: ./package.json
          node-version: 20

      - name: Install deps
        run: npm install

      - name: âš¡ Run vitest
        run: npm run test -- --coverage

  playwright:
    name: Playwright
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Copy test env vars
        run: cp .env.example .env

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          cache: npm
          cache-dependency-path: ./package.json
          node-version: 20

      - name: Install deps
        run: >
          npm install;
          npx playwright install --with-deps;

      - name: Docker compose
        # the sleep is just there to give time for postgres to get started
        run: docker compose up -d && sleep 3
        env:
          DATABASE_URL: 'postgresql://postgres:postgres@localhost:5432/postgres'

      - name: Setup Database
        run: npx prisma migrate reset --force

      - name: Build
        run: npm run build

      - name: Playwright run
        run: npm run e2e

  migrate:
    name: Migrate
    runs-on: ubuntu-latest
    needs: [prettier, lint, typecheck, vitest, playwright]
    # only deploy main/dev branch on pushes
    if: ${{ github.ref == 'refs/heads/main' && github.event_name == 'push' }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Install deps
        run: npm install
        
      - name: Run migrations
        run: npx prisma migrate deploy
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
