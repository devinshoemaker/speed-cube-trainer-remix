name: CI

on:
  push:
    branches:
      - main
      - dev
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  actions: write
  contents: read

jobs:
  prettier:
    name: Prettier
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          cache: npm
          cache-dependency-path: ./package.json
          node-version: 20

      - name: Install deps
        run: npm install

      - name: Prettier check
        run: npm run format:check

  lint:
    name: ESLint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          cache: npm
          cache-dependency-path: ./package.json
          node-version: 20

      - name: Install deps
        run: npm install

      - name: Lint
        run: npm run lint

  typecheck:
    name: TypeScript
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          cache: npm
          cache-dependency-path: ./package.json
          node-version: 20

      - name: Install deps
        run: npm install

      - name: Type check
        run: npm run typecheck --if-present

  vitest:
    name: Vitest
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          cache: npm
          cache-dependency-path: ./package.json
          node-version: 20

      - name: Install deps
        run: npm install

      - name: âš¡ Run vitest
        run: npm run test -- --coverage

  playwright:
    name: Playwright
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Copy test env vars
        run: cp .env.example .env

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          cache: npm
          cache-dependency-path: ./package.json
          node-version: 20

      - name: Install deps
        run: >
          npm install;
          npx playwright install --with-deps;

      - name: Docker compose
        # the sleep is just there to give time for postgres to get started
        run: docker compose up -d && sleep 3
        env:
          DATABASE_URL: "postgresql://postgres:postgres@localhost:5432/postgres"

      - name: Setup Database
        run: npx prisma migrate reset --force

      - name: Build
        run: npm run build

      - name: Playwright run
        run: npm run e2e

  # deploy:
  #   name: Deploy
  #   runs-on: ubuntu-latest
  #   needs: [prettier, lint, typecheck, vitest, playwright]
  #   # only deploy main/dev branch on pushes
  #   if: ${{ (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev') && github.event_name == 'push' }}

  #   steps:
  #     - name: Checkout repo
  #       uses: actions/checkout@v4

  #     - name: Read app name
  #       uses: SebRollen/toml-action@v1.0.2
  #       id: app_name
  #       with:
  #         file: fly.toml
  #         field: app

  #     - name: Setup Fly
  #       uses: superfly/flyctl-actions/setup-flyctl@v1.4

  #     - name: Deploy Staging
  #       if: ${{ github.ref == 'refs/heads/dev' }}
  #       run: flyctl deploy --remote-only --build-arg COMMIT_SHA=${{ github.sha }} --app ${{ steps.app_name.outputs.value }}-staging
  #       env:
  #         FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

  #     - name: Deploy Production
  #       if: ${{ github.ref == 'refs/heads/main' }}
  #       run: flyctl deploy --remote-only --build-arg COMMIT_SHA=${{ github.sha }} --app ${{ steps.app_name.outputs.value }}
  #       env:
  #         FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
